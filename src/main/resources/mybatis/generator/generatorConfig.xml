<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
	
	<properties resource="application.properties"/> 
	
    <!-- 数据库驱动:选择你的本地硬盘上面的数据库驱动包-->
    <context id="MysqlTables"  targetRuntime="MyBatis3Simple" defaultModelType="flat">
        <property name="javaFileEncoding" value="UTF-8"/>
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
    	<!-- TK.Mybatis begin -->
        <plugin type="${mapper.plugin}">
          <property name="mappers" value="${mapper.Mapper}"/>
        </plugin>
        <!-- TK.Mybatis end -->
    	<!-- 该插件给实体类添加toString()方法  -->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>
        <!-- 这个插件给由MBG生成的Java模型对象增加了equals和hashCode方法 -->
        <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"/>
        
        <commentGenerator>
        <!-- 这个元素用来去除指定生成的注释中是否包含生成的日期 false:表示保护 -->
            <!-- 如果生成日期，会造成即使修改一个字段，整个实体类所有属性都会发生变化，不利于版本控制，所以设置为true -->
            <property name="suppressDate" value="true" />
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="false" />
        </commentGenerator>
        <!--数据库链接URL，用户名、密码 -->
        <jdbcConnection driverClass="${spring.datasource.driver-class-name}" connectionURL="${spring.datasource.url}" 
         userId="${spring.datasource.username}" password="${spring.datasource.password}" />
        <javaTypeResolver>
	        <!-- 
	            true：使用BigDecimal对应DECIMAL和 NUMERIC数据类型
	            false：默认,
	                scale>0;length>18：使用BigDecimal;
	                scale=0;length[10,18]：使用Long；
	                scale=0;length[5,9]：使用Integer；
	                scale=0;length<5：使用Short；
	         -->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>
        <!-- 生成模型的包名和位置-->
        <javaModelGenerator targetPackage="com.andy.sbm.entity" targetProject="${targetJavaProject}">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
            
             <!-- 是否  自动为每一个生成的类创建一个构造方法-->
            <property name="constructorBased" value="false"/>
            <property name="useActualColumnNames" value="true" />
            <!-- 在targetPackage的基础上，根据数据库的schema再生成一层package-->
            <property name="enableSubPackages" value="false"/>
            <!-- 是否创建一个不可变的类 -->
            <property name="immutable" value="false"/>
            <!-- 设置是否在getter方法中，对String类型字段调用trim()方法 -->
            <property name="trimStrings" value="true"/>
            <property name="rootClass" value="com.andy.cmn.base.BaseEntity"/>
        </javaModelGenerator>
        <!-- 生成映射文件的包名和位置-->
        <sqlMapGenerator targetPackage="mapping" targetProject="src/main/resources/mybatis">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>
        <!-- 生成DAO的包名和位置-->
        <javaClientGenerator type="XMLMAPPER" targetPackage="${projectPackage}.dao" targetProject="${targetJavaProject}">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>
        <!-- 要生成的表 tableName是数据库中的表名或视图名 domainObjectName是实体类名-->
        <!-- <table tableName="user" domainObjectName="User" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false"></table> -->
    	<table tableName="%"  selectByExampleQueryId="false">
    		
    	</table>
    </context>
</generatorConfiguration>